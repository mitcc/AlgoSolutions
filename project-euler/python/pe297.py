'''
Zeckendorf Representation
Problem 297
Each new term in the Fibonacci sequence is generated by adding the previous two
terms.
Starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55,
 89.

Every positive integer can be uniquely written as a sum of nonconsecutive terms
of the Fibonacci sequence. For example, 100 = 3 + 8 + 89.
Such a sum is called the Zeckendorf representation of the number.

For any integer n>0, let z(n) be the number of terms in the Zeckendorf
representation of n.
Thus, z(5) = 1, z(14) = 2, z(100) = 3 etc.
Also, for 0<n<10^6, ∑ z(n) = 7894453.

Find ∑ z(n) for 0<n<10^17.
'''

__date__ = '14-3-4'
__author__ = 'SUN'

f = [0, 1, 2]
sum_z = [0, 0, 1]

def sigma_z(n):
    if n <= 3:
        return sum_z[n]
    else:
        i = 0
        while f[i + 1] <= n:
            i += 1
        return sum_z[i] + sigma_z(n - f[i]) + n - f[i]

if __name__ == '__main__':
    N = 10 ** 18
    while f[-2] + f[-1] <= N:
        f.append(f[-2] + f[-1])
        sum_z.append(sum_z[-2] + sum_z[-1] + f[-1] - f[-2])
    print(sigma_z(10 ** 17))